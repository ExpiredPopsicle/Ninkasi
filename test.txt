function testTrue(x)
{
    if(x) {
        print("SUCCESS\n");
    } else {
        print("FAIL\n");
    }
}

function testFalse(x)
{
    if(x) {
        print("FAIL\n");
    } else {
        print("SUCCESS\n");
    }
}

function returnTest()
{
    return 2 > 1;
}

print("\nThese ones should succeed...\n");
testTrue(2 > 1);
testFalse(1 > 2);
testTrue(1 >= 1);
testFalse(1 >= 2);
testFalse(1 > 1);
testTrue(1 < 2);
testFalse(2 < 1);
testTrue(1 <= 1);
testFalse(2 <= 1);
testFalse(1 < 1);
testTrue("foo" + "bar" == "foobar");
testTrue(returnTest());
testTrue(1 == "1");
testTrue(1 === 1);
testFalse(1 === "1");

testTrue(1 != "2");
testTrue(1 != 2);
testFalse(1 != 1);

testTrue(!!1);
testFalse(!1);
testTrue(!0);
testFalse(!!0);

testTrue(1 && 1);
testFalse(1 && 0);
testFalse(0 && 1);
testFalse(0 && 0);

testTrue(1 || 1);
testTrue(1 || 0);
testTrue(0 || 1);
testFalse(0 || 0);


testTrue(5 % 3 == 2);


print("\nThis ones should fail...\n");
testTrue(0);
testFalse(1);
print("\n");

var counter = 0;
for(var x = 10; x; --x) {
    for(var y = 10; y; --y) {
        // print("" + (x * y) + "\n");
        ++counter;
    }
}
print("Counter: " + counter);

// while(1)
// {
//     print("foo");
// }

// var k;
for(var k = 10; k; --k) {
    print("foo " + k);
}

var k;
for(k = 10; k; 3 * 4 + (--k))
{
    print("foo " + k);
}

var foo = 123;
var bar;
bar = foo + foo;

function cheese()
{
    return "CHEESE";
}

function getFunctionId()
{
    return _functionId;
}

function getArgumentCount(a, b, c, d, e)
{
    return _argumentCount;
}

function getReturnPointer()
{
    return _returnPointer;
}

{
    var shouldNotBeInFunction;

    function otherTest(a, b)
    {
        var cheeseStr = cheese();
        return a + b + cheeseStr;
    }

    function test(a, b, c)
    {
        return "beep" + "boop" + b;
    }

    foo = 1;
    foo = 2;
    foo = 3;
    foo = 4;
    foo = 5;
    foo = test(123, 456, 789);
    bar = test(123, 456, 789);

    foo = otherTest(
        test(0, "FOOM", 0),
        test(0, "BUTTS", 0));

    // "foom";
}

bar = "asdf";

// function test1()
// {
//     return "t1value";
// }

// function test2()
// {
//     return "t2value";
// }

// test1() + test2();

print("\n");

// print("Function ID is" + getFunctionId() + "\n");
print("Argument count is " + getArgumentCount(0, 0, 0, 0, 0) + "\n");
print("Return pointer is " + getReturnPointer() + "\n");

function blahtest(a, b, c)
{
    1;
    return 0;
}


var thing;
thing = 2;

blahtest(1, 2, 3);

function callMeFromC()
{
    return "ASDFASDFASDFASDFASDF";
}
cfunc(callMeFromC);


var readMeFromC = 1 + 2 + 3;


print("Hello I am printing from the VM\n");

// if(0 + 1) {
//     print("This should happen.\n");
// }

if(1) {
    print("This should happen.\n");
} else {
    print("This shouldn't happen.\n");
}

// if(1 - 1) {
//     print("This should NOT happen.\n");
// }

"ASDF";

// if(0) {
//     print("None of this.\n");
// } else {
//     print("Definitely this.\n");
// }


var i;
i = 10;
while(i) {
    i = i - 1;
    print("THIS IS A THING " + i + "\n");
}

i = 10;
while(--i) var n;

// print("This is an object... ");
// print(newobject);
// print("\n");

for(i = 0; i < 10; ++i) {
    var asdf = newobject;
    var asdf2 = newobject;
    var asdf3 = newobject;
    var asdf4 = newobject;
    var asdf5 = newobject;
    var asdf6 = newobject;
}


var gtest = "asdf";
