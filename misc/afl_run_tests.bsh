#!/bin/bash

# Bring us up to the project root directory.
cd "$(dirname "$0")/.."

# AFL doesn't really have a good way of running the UI with a bunch of
# parallel tests going on, so this function just creates a ton of
# xterm windows running individual instances of the fuzzer.
function addTerm()
{
    local AFLTYPE=S
    if [ "${TERMCOUNTER}" == "" ]; then
        TERMCOUNTER=0
        AFLTYPE=M
        echo "New master term"
    else
        echo "Adding term ${TERMCOUNTER}"
    fi

    local XPOS="$(expr \( "${TERMCOUNTER}" \% 4 \) \* 80 \* 6)"
    local YPOS="$(expr \( "${TERMCOUNTER}" / 4 \) \* 25 \* 14 + 32)"

    xterm \
        -geom "80x25+${XPOS}+${YPOS}" \
        -e "afl-fuzz \
        -t 1000 \
        -i afl_in \
        -o afl_out \
        -"${AFLTYPE}" "afl-${TERMCOUNTER}" \
        src/ninkasi_test - ; sleep 10"&

    TERMCOUNTER=$(expr "${TERMCOUNTER}" + 1)
}

# Change the numbers here if you aren't using something with 16
# hardware threads.
for i in $(seq 2 15); do
	echo $i
	addTerm
done

# Just watch the status until the user kills it.
watch afl-whatsup -s afl_out
