print("Test\n");


function crTestFunc(foo, bar)
{
    print("Foo1: ", foo, "\n");
    print("Bar1: ", bar, "\n");
    coroutine_yield2(1234);
    print("Foo2: ", foo, "\n");
    print("Bar2: ", bar, "\n");
    coroutine_yield2(1234);
    print("Foo3: ", foo, "\n");
    print("Bar3: ", bar, "\n");
    coroutine_yield2();
    print("Foo4: ", foo, "\n");
    print("Bar4: ", bar, "\n");
    coroutine_yield2(1234);
    print("Foo5: ", foo, "\n");
    print("Bar5: ", bar, "\n");
    coroutine_yield2();
    print("Foo6: ", foo, "\n");
    print("Bar6: ", bar, "\n");
    coroutine_yield2(1234);
    print("Foo7: ", foo, "\n");
    print("Bar7: ", bar, "\n");
    coroutine_yield2();
    print("DONE\n");
    for(var i = 0; i < 1000; ++i) {
    }
}

// crTestFunc("asdf", "blah");
print("Creating coroutine...\n");
var cr = coroutine_create2(crTestFunc, "asdf", "blah");
print("Done.\n");




print("Resuming coroutine...\n");
var crRet = coroutine_resume2(cr);
print("Done: ", crRet, "\n");

// var val1 = coroutine_resume2(cr);
// print("val1: ", val1, "\n");

// var val2 = coroutine_resume2(cr);
// print("val2: ", val2, "\n");










// // crTestFunc("val1", "val2");


// // -++coroutine_resume2(cr)[0];
// // coroutine_resume2[0](cr);


var butt = object();

butt[0] = 1234;
print("butt[0]: ", butt[0], "\n");



// print("Yieldtest:  ", coroutine_yield2("yieldtest"), "\n");
// print("Resumetest: ", coroutine_resume2(cr, "resumetest"), "\n");


// print("butt[0]: ", butt[0], "\n");
// print("butt[0]: ", butt[0], "\n");
// print("butt[0]: ", butt[0], "\n");
